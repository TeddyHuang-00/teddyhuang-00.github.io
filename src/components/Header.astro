---
import { getRelativeLocaleUrl } from "astro:i18n";
import { Icon } from "astro-icon/components";
import { Toggle } from "astro-theme-toggle";
import { SITE } from "@/config";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import Hr from "./Hr.astro";
import LinkButton from "./LinkButton.astro";

const { pathname } = Astro.url;

const currentLang = getLangFromUrl(Astro.url);
const localeString = useTranslations(currentLang);
// Remove trailing slash from current pathname if exists
const currentPath =
  pathname.endsWith("/") && pathname !== "/" ? pathname.slice(0, -1) : pathname;
const langAgnosticPath = currentPath.split("/").slice(2).join("/");

const isActive = (path: string) => {
  const currentPathArray = langAgnosticPath.split("/").filter((p) => p.trim());
  const pathArray = path.split("/").filter((p) => p.trim());

  return currentPath === path || currentPathArray[0] === pathArray[0];
};
---

<header>
  <a
    id="skip-to-content"
    href="#main-content"
    class="absolute start-16 -top-full z-50 bg-background px-3 py-2 text-accent backdrop-blur-lg transition-all focus:top-4"
  >
    {localeString("nav.skip-to-content")}
  </a>
  <div
    id="nav-container"
    class="mx-auto flex max-w-app flex-col items-center justify-between sm:flex-row"
  >
    <div
      id="top-nav-wrap"
      class="relative flex w-full items-baseline justify-between bg-background p-4 sm:items-center sm:py-6"
    >
      <a
        href={getRelativeLocaleUrl(currentLang, "/")}
        aria-label={localeString("nav.home")}
        title={localeString("nav.home")}
        class="absolute p-1 text-xl leading-8 font-semibold whitespace-nowrap sm:static sm:my-auto sm:text-2xl sm:leading-none"
      >
        <Icon
          name="LogoLight"
          class="absolute sm:-translate-y-1/3 size-8 scale-100 dark:scale-0"
        />
        <Icon
          name="LogoDark"
          class="absolute sm:-translate-y-1/3 size-8 scale-0 dark:scale-100"
        />
      </a>
      <nav
        id="nav-menu"
        class="flex w-full flex-col items-center sm:ms-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0"
      >
        <button
          id="menu-btn"
          class="focus-outline self-end p-2 sm:hidden"
          aria-label={localeString("nav.open-menu")}
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <Icon name="tabler:x" id="close-icon" class="hidden size-4" />
          <Icon name="tabler:menu-deep" id="menu-icon" class="size-4" />
        </button>
        <ul
          id="menu-items"
          class:list={[
            "mt-4 grid w-44 grid-cols-2 place-content-center gap-2",
            "[&>li>a]:block [&>li>a]:px-4 [&>li>a]:py-3 [&>li>a]:text-center [&>li>a]:font-medium [&>li>a]:hover:text-accent sm:[&>li>a]:px-2 sm:[&>li>a]:py-1",
            "hidden",
            "sm:mt-0 sm:flex sm:w-auto sm:gap-x-5 sm:gap-y-0",
          ]}
        >
          <li class="col-span-2">
            <a
              href={getRelativeLocaleUrl(currentLang, "/posts")}
              class:list={{ "active-nav": isActive("/posts") }}
            >
              {localeString("nav.posts")}
            </a>
          </li>
          <li class="col-span-2">
            <a
              href={getRelativeLocaleUrl(currentLang, "/tags")}
              class:list={{ "active-nav": isActive("/tags") }}
            >
              {localeString("nav.tags")}
            </a>
          </li>
          <li class="col-span-2">
            <a
              href={getRelativeLocaleUrl(currentLang, "/about")}
              class:list={{ "active-nav": isActive("/about") }}
            >
              {localeString("nav.about")}
            </a>
          </li>
          {
            SITE.showArchives && (
              <li class="col-span-2">
                <LinkButton
                  href={getRelativeLocaleUrl(currentLang, "/archives")}
                  class:list={[
                    "focus-outline flex justify-center p-3 sm:p-1",
                    {
                      "active-nav [&>svg]:stroke-accent": isActive("/archives"),
                    },
                  ]}
                  ariaLabel={localeString("nav.archives")}
                  title={localeString("nav.archives")}
                >
                  <Icon
                    name="tabler:archive"
                    class="hidden size-6 sm:inline-block"
                  />
                  <span class="sm:sr-only">{localeString("nav.archives")}</span>
                </LinkButton>
              </li>
            )
          }
          <li class="col-span-1 flex items-center justify-center">
            <LinkButton
              href={getRelativeLocaleUrl(currentLang, "/search")}
              class:list={[
                "focus-outline flex p-3 sm:p-1",
                { "[&>svg]:stroke-accent": isActive("/search") },
              ]}
              ariaLabel={localeString("nav.search")}
              title={localeString("nav.search")}
            >
              <Icon name="tabler:search" class="size-6" />
              <span class="sr-only">{localeString("nav.search")}</span>
            </LinkButton>
          </li>
          {
            Object.keys(SITE.locales).length > 1 && (
              <li class="col-span-1 flex items-center justify-center">
                <div class="relative">
                  <button
                    id="lang-btn"
                    class="focus-outline relative size-12 p-4 sm:size-8 hover:[&>svg]:stroke-accent"
                    title={localeString("nav.change-language")}
                    aria-label={`${localeString("nav.current-language")}: ${SITE.locales[currentLang].label}`}
                    aria-expanded="false"
                    aria-haspopup="true"
                  >
                    <Icon
                      name="tabler:language"
                      class="absolute top-[50%] left-[50%] size-6 -translate-[50%] transition-all"
                    />
                  </button>
                  <div
                    id="lang-menu"
                    class="absolute right-0 top-full z-50 mt-2 hidden min-w-max rounded-md border border-border bg-background p-1 shadow-lg backdrop-blur-lg"
                  >
                    {Object.entries(SITE.locales).map(([lang, { label }]) => (
                      <a
                        href={getRelativeLocaleUrl(lang, langAgnosticPath)}
                        class:list={[
                          "block rounded px-3 py-2 text-sm font-medium transition-colors hover:bg-muted hover:text-accent",
                          {
                            "text-accent": currentLang === lang,
                          },
                        ]}
                        title={`Switch to ${label}`}
                        aria-label={`Switch to ${label}`}
                      >
                        {label}
                      </a>
                    ))}
                  </div>
                </div>
              </li>
            )
          }
          {
            SITE.lightAndDarkMode && (
              <li class="col-span-1 flex items-center justify-center">
                <Toggle class="focus-outline relative size-12 p-4 sm:size-8 hover:[&>svg]:stroke-accent">
                  <Fragment slot="icon-light">
                    <Icon
                      name="tabler:sun-high"
                      class="absolute top-[50%] left-[50%] size-6 -translate-[50%] block transition-all scale-100 rotate-0 dark:scale-0 dark:-rotate-90"
                    />
                  </Fragment>
                  <Fragment slot="icon-dark">
                    <Icon
                      name="tabler:moon"
                      class="absolute top-[50%] left-[50%] size-6 -translate-[50%] block transition-all scale-0 -rotate-90 dark:scale-100 dark:rotate-0"
                    />
                  </Fragment>
                </Toggle>
              </li>
            )
          }
        </ul>
      </nav>
    </div>
  </div>
  <Hr />
</header>

<script>
  function toggleNav() {
    const menuBtn = document.querySelector("#menu-btn");
    const menuItems = document.querySelector("#menu-items");
    const menuIcon = document.querySelector("#menu-icon");
    const closeIcon = document.querySelector("#close-icon");

    if (!menuBtn || !menuItems || !menuIcon || !closeIcon) return;

    menuBtn.addEventListener("click", () => {
      const openMenu = menuBtn.getAttribute("aria-expanded") === "true";

      menuBtn.setAttribute("aria-expanded", openMenu ? "false" : "true");
      menuBtn.setAttribute("aria-label", openMenu ? "Open Menu" : "Close Menu");

      menuItems.classList.toggle("hidden");
      menuIcon.classList.toggle("hidden");
      closeIcon.classList.toggle("hidden");
    });
  }

  function toggleLangMenu() {
    const langBtn = document.querySelector("#lang-btn") as HTMLButtonElement;
    const langMenu = document.querySelector("#lang-menu") as HTMLDivElement;

    if (!langBtn || !langMenu) return;

    langBtn.addEventListener("click", (e) => {
      e.stopPropagation();
      const isOpen = langBtn.getAttribute("aria-expanded") === "true";

      langBtn.setAttribute("aria-expanded", isOpen ? "false" : "true");
      langMenu.classList.toggle("hidden");
    });

    // Close dropdown when clicking outside
    document.addEventListener("click", (e) => {
      const target = e.target as Node;
      if (!langBtn.contains(target) && !langMenu.contains(target)) {
        langBtn.setAttribute("aria-expanded", "false");
        langMenu.classList.add("hidden");
      }
    });

    // Close dropdown on Escape key
    document.addEventListener("keydown", (e) => {
      if (
        (e.key === "Escape" || e.key === "Esc") &&
        langBtn.getAttribute("aria-expanded") === "true"
      ) {
        langBtn.setAttribute("aria-expanded", "false");
        langMenu.classList.add("hidden");
        langBtn.focus();
      }
    });
  }

  toggleNav();
  toggleLangMenu();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", () => {
    toggleNav();
    toggleLangMenu();
  });
</script>
