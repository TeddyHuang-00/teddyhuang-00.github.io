---
export interface Props {
  rb: string;
  rt: string;
}

const { rb, rt } = Astro.props;

const rbs = rb.split("|");
const rts = rt.split("|");

if (rbs.length !== rts.length) {
  const length = Math.max(rbs.length, rts.length);
  const matched = Array.from({ length }).map((_, i) => {
    return `${rbs[i] ?? "???"} (${rts[i] ?? "???"})`;
  });
  throw new Error(
    "The number of rb and rt must be the same. Current have: " +
      matched.join(", ")
  );
}
const pairs = rbs.map((rb, i) => ({ rb, rt: rts[i] }));
---

<ruby class="text-inherit">
  {
    pairs.map(({ rb, rt }, i) => (
      <>
        <rb>{rb}</rb>
        <rp>(</rp>
        <rt>{rt}</rt>
        <rp>)</rp>
        {i < pairs.length - 1 && " "}
      </>
    ))
  }
</ruby>

<style is:global>
  ruby > rt {
    font-size: 100%;
    zoom: 0.75;
  }
  ruby {
    ruby-align: center;
  }
</style>
